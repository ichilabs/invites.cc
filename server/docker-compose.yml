services:
  app:
    build: .
    container_name: golang_container
    # TODO: Remove basic setting after test
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT=${PORT}
    tty: true
    ports:
      - 8000:8080
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - postgres_invites

  postgres_invites:
    container_name: postgres_invites
    image: postgres
    env_file:
      - ./.env
    environment:
      # TODO: Remove basic setting after test
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db:/data/postgres
    ports:
      - 5432:5432
    networks:
      - db
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
networks:
  db:
    driver: bridge

volumes:
  db:
